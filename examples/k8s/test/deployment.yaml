apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    actor-system: spawn-system
    app: spawn-proxy-test
  name: spawn-proxy-test
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      actor-system: spawn-system
      app: spawn-proxy-test
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9001"
        prometheus.io/scrape: "true"
      labels:
        actor-system: spawn-system
        app: spawn-proxy-test
    spec:
      containers:
        - env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: SPAWN_PROXY_PORT
              value: "9001"
            - name: SPAWN_PROXY_INTERFACE
              value: 0.0.0.0
            - name: RELEASE_NAME
              value: "spawn-proxy-test"
            - name: RELEASE_DISTRIBUTION
              value: "name"
            - name: RELEASE_NODE
              value: "$(RELEASE_NAME)@$(POD_IP)"
          envFrom:
            - configMapRef:
                name: spawn-dice-game-sidecar-cm
            - secretRef:
                name: spawn-system-secret
          name: actor-host-function
          image: eigr/spawn-proxy:0.6.3
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8800
              name: http
              protocol: TCP
            - containerPort: 4369
              name: epmd
              protocol: TCP
            - containerPort: 9000
              name: proxy-http
              protocol: TCP
            - containerPort: 9001
              name: proxy-https
              protocol: TCP
          resources:
            limits:
              memory: 1Gi
            requests:
              memory: 80Mi
              ephemeral-storage: "100Ki"
          volumeMounts:
            - mountPath: /app/certs
              name: volume-certs
              readOnly: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      initContainers:
        - name: setup-proxy
          image: alpine/openssl
          command:
            [
              "sh",
              "-c",
              "openssl x509 -noout -pubkey -in /etc/certs/tls.crt > /app/certs/cert.pem;openssl rsa -in /etc/certs/tls.key -text > /app/certs/key.pem",
            ]
          volumeMounts:
            - mountPath: /etc/certs
              name: system-certs
              readOnly: true
            - mountPath: /app/certs
              name: volume-certs
      volumes:
        - name: system-certs
          secret:
            optional: false
            secretName: spawn-system-tls-secret
        - name: volume-certs
          emptyDir: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 120
