---
apiVersion: spawn-eigr.io/v1
kind: Activator
metadata:
  name: rabbitmq-activator # Mandatory. Name of the activator
  namespace: default # Optional. Default namespace is "default"
spec:
  activator:
    type: AMQP
    paramsSecretRef: rabbitmq-connection-secret
    externalConnectorRef: invocation-connection-ref
  bindings:
    settings:
      backpressure:
        maxDemand: 2
        prefetchCount: 50 # Default to: processorConcurrency * maxDemand
      processorConcurrency: 50
      producerConcurrency: 1
    sources:
      - name: amqp-source
        queue: test.queue
    sinks:
      - name: robert-sink # name of the sink component
        to: # Send to channel or to actor
          #channel: my-actors-channel
          actor:
            type: abstract # valid are singleton, abstract, pooled
            parent: abs_actor
            #name: robert # Name of an Actor to send queue event message
            nameFrom:
              sourceRef:
                bindWith: amqp-source
                #queueNamingStrategy:
                #  queue: test.queue
                # Below we use metadataNamingStrategy for map message headers to actor name.
                # valid entries are: [app_id, user_id, message_id, correlation_id, or any key present on amqp headers key]
                metadataNamingStrategy:
                  # Example in the Java programming language of how to define the actor's name when sending a message via amqp:
                  #   Below we use user_id to get name of the actor.
                  #   AMQP.BasicProperties properties = new AMQP.BasicProperties();
                  #   properties.setUserId("robert");
                  #   channel.basicPublish("test.queue", "", properties, "test".getBytes());
                  key: "user_id"
                #suffixWith: -actor
                #prefixWith: actor-
            action: setLanguage # Name of an Actor action to call

