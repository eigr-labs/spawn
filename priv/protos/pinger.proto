syntax = "proto3";

option objc_class_prefix = "HLW";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "eigr/functions/protocol/actors/extensions.proto";

package pinger;

// The ping-pong state of PingPongActor
message PingPongState {
  string actual_name = 1;
  string previous_name = 2;
  google.protobuf.Timestamp updated_at = 3;
}

// The request message containing the actor name.
message PingRequest {
  string name = 1 [ (.eigr.functions.protocol.actors.actor_id) = true ];
}

// The response message containing the pong
message PongReply {
  string message = 1;
  google.protobuf.Timestamp today = 2;
}

// The PingPong actor service definition.
service PingPongActor {

  rpc Ping(PingRequest) returns (PongReply) {
    option (google.api.http) = {
      post : "/v1/ping/{name}"
      body : "*"
    };
  }

  // Get Pong Message
  rpc Pong(google.protobuf.Empty) returns (PingPongState) {
    option (google.api.http) = {
      get : "/v1/pong/{name}"
    };
  }
}
