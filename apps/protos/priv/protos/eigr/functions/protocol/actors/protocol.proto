syntax = "proto3";

package eigr.functions.protocol;

import "actor.proto";
import "google/protobuf/any.proto";

option java_package = "io.eigr.functions.protocol";
option go_package = "github.com/eigr/go-support/eigr/protocol;protocol";

enum Status {
    UNKNOWN = 0;
    OK = 1;
    ACTOR_NOT_FOUND = 2;
    ERROR = 3;
}

message Node {
    string id = 1;
}

message InvocationStatus {
    Status status = 1;
    string message = 2;
}

message ProxyInfo {
    int32 protocol_major_version = 1;
    int32 protocol_minor_version = 2;
    string proxy_name = 3;
    string proxy_version = 4;
}

message ServiceInfo {

    // The name of the actor system, eg, "my-actor-system".
    string service_name = 1;

    // The version of the service.
    string service_version = 2;

    // A description of the runtime for the service. Can be anything, but examples might be:
    // - node v10.15.2
    // - OpenJDK Runtime Environment 1.8.0_192-b12
    string service_runtime = 3;

    // If using a support library, the name of that library, eg "spawn-jvm"
    string support_library_name = 4;

    // The version of the support library being used.
    string support_library_version = 5;

    // Cloudstate protocol major version accepted by the support library.
    int32 protocol_major_version = 6;

    // Cloudstate protocol minor version accepted by the support library.
    int32 protocol_minor_version = 7;
}

message RegistrationRequest {
    ServiceInfo service_info = 1;
    eigr.functions.protocol.actors.ActorSystem actor_system = 2;
}

message RegistrationResponse {
    ProxyInfo proxy_info = 1;
}

message InvocationRequest {
    eigr.functions.protocol.actors.ActorSystem system =1;
    eigr.functions.protocol.actors.Actor actor = 2;
    string command_name = 3;
    google.protobuf.Any value = 4;
    bool async = 5;
}

message InvocationResponse {
    InvocationStatus status = 1;
    eigr.functions.protocol.actors.ActorSystem system =2;
    eigr.functions.protocol.actors.Actor actor = 3;
}

message ActorInvocation {
    Node node = 1;
    InvocationRequest invocation_request = 2;
}

message ActorInvocationResponse {
    Node node = 1;
    google.protobuf.Any updated_state = 2;
    InvocationResponse invocation_response = 3;
}    

message ActorSystemRequest {
    oneof message {
        RegistrationRequest registration_request = 1;
        InvocationRequest invocation_request = 2;
        ActorInvocationResponse actor_invocation_response = 3;
    }
}

message ActorSystemResponse {
    oneof message {
        RegistrationResponse registration_response = 1;
        ActorInvocation actor_invocation = 2;
        InvocationResponse invocation_response = 3;
    }
}

service SpawnProxyService {
    rpc Register(ActorSystemRequest) returns (ActorSystemResponse);
    rpc Invoke(InvocationRequest) returns (InvocationResponse);
}

service SpawnUserService {
    rpc Action(ActorInvocation) returns (ActorInvocationResponse);
}