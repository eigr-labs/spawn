name: Release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    name: Build and Test OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [24, 25. 26]
        elixir: [1.15]
    services:
      db:
        env:
          MYSQL_USER: admin
          MYSQL_PASSWORD: "admin"
          MYSQL_ROOT_PASSWORD: "admin"
          MYSQL_DATABASE: "eigr-functions-db"
        image: mysql:5.7
        ports: ["3306:3306"]
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    env:
      MIX_ENV: test
      ImageOS: ubuntu20 # equivalent to runs-on ubuntu-20.04

    steps:
      - uses: actions/checkout@v3

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{matrix.elixir}} # Define the elixir version [required]
          otp-version: ${{matrix.otp}} # Define the OTP version [required]

      - uses: actions/cache@v1
        id: deps-cache
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - uses: actions/cache@v1
        id: build-cache
        with:
          path: _build
          key: ${{ runner.os }}-build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}

      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@master

      - name: Test cluster !
        run: kubectl get pods -A

      - name: Install dependencies
        run: |
          mix deps.clean --all
          mix deps.get

      - name: Run tests spawn
        run: |
          MIX_ENV=test PROXY_DATABASE_TYPE=mysql PROXY_CLUSTER_STRATEGY=gossip PROXY_HTTP_PORT=9005 SPAWN_STATESTORE_KEY=3Jnb0hZiHIzHTOih7t2cTEPEpY98Tu1wvQkPfq/XwqE= elixir --name spawn@127.0.0.1 -S mix test

      - name: Run tests spawn_sdk
        run: |
          cd spawn_sdk/spawn_sdk
          mix deps.get
          MIX_ENV=test PROXY_DATABASE_TYPE=mysql PROXY_CLUSTER_STRATEGY=gossip PROXY_HTTP_PORT=9005 SPAWN_STATESTORE_KEY=3Jnb0hZiHIzHTOih7t2cTEPEpY98Tu1wvQkPfq/XwqE= elixir --name spawn@127.0.0.1 -S mix test
          cd ../../

      - name: Run tests spawn_statestores
        run: |
          cd spawn_statestores/statestores_mysql
          mix deps.get
          MIX_ENV=test PROXY_CLUSTER_STRATEGY=gossip PROXY_HTTP_PORT=9005 SPAWN_STATESTORE_KEY=3Jnb0hZiHIzHTOih7t2cTEPEpY98Tu1wvQkPfq/XwqE= elixir --name spawn@127.0.0.1 -S mix test
          cd ../../

      - name: Run tests proxy
        run: |
          cd spawn_proxy/proxy
          mix deps.get
          MIX_ENV=test PROXY_DATABASE_TYPE=mysql PROXY_CLUSTER_STRATEGY=gossip PROXY_HTTP_PORT=9005 SPAWN_STATESTORE_KEY=3Jnb0hZiHIzHTOih7t2cTEPEpY98Tu1wvQkPfq/XwqE= elixir --name spawn@127.0.0.1 -S mix test
          cd ../../

      - name: Run tests operator
        run: |
          cd spawn_operator/spawn_operator
          mix deps.get
          MIX_ENV=test PROXY_DATABASE_TYPE=mysql PROXY_CLUSTER_STRATEGY=gossip PROXY_HTTP_PORT=9005 SPAWN_STATESTORE_KEY=3Jnb0hZiHIzHTOih7t2cTEPEpY98Tu1wvQkPfq/XwqE= elixir --name spawn@127.0.0.1 -S mix test
          cd ../../

  build-and-push-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build and push container image
        uses: docker/build-push-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: https://ghcr.io/eigr/spawn
          tag_with_sha: true
          tag_with_ref: true
