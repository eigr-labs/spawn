# Build Stage
FROM elixir:1.15-alpine AS builder

ENV MIX_ENV=prod

WORKDIR /app

# Install build dependencies and tools
RUN apk add --no-cache git build-base ca-certificates zstd gcc pkgconfig openssl-dev

# Copy application code
COPY spawn_initializer/ .

# Install Elixir dependencies and build release
RUN mix local.rebar --force \
    && mix local.hex --force \
    && mix deps.get \
    && mix release.init

# Environment variables for release
ENV POD_IP="127.0.0.1"
ENV RELEASE_NAME="spawn_initializer"
ENV RELEASE_NODE="${RELEASE_NAME}@${POD_IP}"

# Build the release
RUN mix deps.get \
    && mix release spawn_initializer

# Runtime Stage
FROM alpine:3.20

# Install runtime dependencies: OpenSSL, zstd, and necessary runtime libraries
RUN apk add --no-cache openssl zstd ncurses-libs libstdc++ libgcc \
    # Create a user with UID 1000 and set up the home directory
    && adduser -D -u 1000 appuser \
    && mkdir -p /app/.cache/bakeware/ /data \
    && chown appuser:appuser /app /app/.cache /data \
    && chmod 777 /app/.cache/bakeware/ /data

WORKDIR /app

# Set environment variables
ENV MIX_ENV=prod
ENV HOME=/app

# Copy compiled release from builder stage
COPY --from=builder --chown=1000:1000 /app/_build/${MIX_ENV}/rel/bakeware/ ./

# Create necessary files and set permissions
RUN touch /.erlang.cookie && chmod 777 /.erlang.cookie \
    && touch /app/.erlang.cookie && chmod 777 /app/.erlang.cookie

# Set entrypoint
ENTRYPOINT ["./spawn_initializer"]
